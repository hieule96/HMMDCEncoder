#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Nov  7 13:59:49 2022

@author: ubuntu
Test TU
"""

import sys,os
import numpy as np
sys.path.insert(0, '../Lib/')
import Quadtreelib as qd
import Transform_HEVC

class FrameYUV(object):
    def __init__(self, Y, U, V):
        self._Y = Y
        self._U = U
        self._V = V
def read_YUV400_frame(fid, width, height,frame=0):
    # read a frame from a YUV420-formatted sequence
    fid.seek(frame*(width*height+width*height//2))
    Y_buf = fid.read(width * height)
    if (len(Y_buf)==width * height):
        Y = np.reshape(np.frombuffer(Y_buf, dtype=np.uint8), [height, width])
    else:
        Y=np.zeros((height,width))
    return FrameYUV(Y, 0, 0)
bord_w = 512
bord_h = 512
frame = 0

Transform_HEVC.initROM()
yuv_files = "../sequence/lena_gray.yuv"
imgY= read_YUV400_frame(open(yuv_files,"rb"),bord_w,bord_h,frame)._Y.astype(np.int64) - 128

x = qd.TransformUnit(0,0,32,32,1,51)
x.recursive_subdivide(imgY)
print (x.computeRateDistortion())

x.setQP(25)
x.recursive_subdivide(imgY)
print (x.computeRateDistortion())